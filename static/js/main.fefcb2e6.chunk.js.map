{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"qQAEeA,E,OAAAA,EAAMC,OAAQ,CACzBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFC0BRC,E,2MA5BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACXA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACIE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAlBlDK,IAAMC,WC+BfC,G,kBA9BX,WAAaZ,GAAQ,IAAD,8BAChB,4CAAMA,KAWVa,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKN,SAAS,CAAEU,WAdhB,EAAKvB,MAAQ,CAAEuB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALN,E,iFAShBlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAW9C,IAAD,EACyBV,KAAKH,MAAMuB,MAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KACrB,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,SACzC,yBAAKU,IAAKzB,KAAKY,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,e,GAzB7CrB,IAAMC,YCUfqB,EARG,SAAAhC,GAChB,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAACX,GAC3B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG5C,OAAO,yBAAKrB,UAAU,cAAc+B,ICgBzBI,E,2MAnBX1C,MAAQ,CAAEsC,OAAQ,I,EAElBK,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAO/C,KAFR,OACPgD,EADO,OAIb,EAAKpC,SAAS,CAAEyB,OAAQW,EAASC,KAAKC,UAJzB,2C,8HAOb,OACI,yBAAK5C,UAAU,eAAewB,MAAO,CAAEqB,UAAW,SAC9C,kBAAC,EAAD,CAAW9C,SAAUE,KAAKmC,iBAC3B,kBAAC,EAAD,CAAWL,OAAQ9B,KAAKR,MAAMsC,c,GAb3BvB,IAAMC,WCDxBqC,IAASC,OACT,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.fefcb2e6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create ({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID e6f1f32051d54b55d1f51a05a12309a2a25af0ce932873b5c1a6824e4815b519'\n    }\n});\n\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term: '' };\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        //this ties to the prop in the searchBar component in App.js\n        this.props.onSubmit(this.state.term);\n    };\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                        <input\n                            type=\"text\"\n                            value={this.state.term}\n                            onChange={e => this.setState({ term: e.target.value })}\n                        />\n                    </div>\n                </form>\n\n            </div>\n        );\n    }\n}\n\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = { spans: 0 };\n        //This is reacts ref system which allows you to get an reference to an element in the DOM\n        this.imageRef = React.createRef();\n    }\n    componentDidMount() {\n        //this has to be done this way otherwise it will get the information before the image loads\n        this.imageRef.current.addEventListener('load', this.setSpans)\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n\n        const spans = Math.ceil(height / 10);\n\n        this.setState({ spans })\n    };\n\n    render() {\n        const { description, urls } = this.props.image;\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt={description} src={urls.regular} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import './ImageList.css';\nimport ImageCard from './ImageCard';\nimport React from 'react';\n\nconst ImageList = props => {\n  const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image} />\n    });\n  \n    return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList'\n\nclass App extends React.Component {\n    state = { images: [] };\n\n    onSearchSubmit = async (term) => {\n        const response = await unsplash.get('/search/photos', {\n            params: { query: term }    \n        });\n        this.setState({ images: response.data.results });\n    }\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px' }}>\n                <SearchBar onSubmit={this.onSearchSubmit} />\n               <ImageList images={this.state.images} />\n            </div>\n        );\n    };\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\nReactDOM.render(\n<App />, document.querySelector('#root')\n);\n"],"sourceRoot":""}